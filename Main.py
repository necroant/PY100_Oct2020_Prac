#!/usr/bin/env python
# coding: utf-8

# ## Списки, генераторы списков

# In[ ]:


a = list()
b = []

a == b


# Сравнение списков происходит по элементно

# In[ ]:


[1, 2] == [2, 1]


# In[ ]:


[1, 2, 3] == [1, 2]


# In[ ]:


[1, 2] == [1, 2]


# In[ ]:


my_list = ['string', 100, 5.678, None]
print(my_list)


# Конструкция `list(range(start, end, step]))` позволяет получить последовательность (список) целых чисел, начинающуюся со `start`, заканчивающуюся в `end-1` и шагом `step`

# In[ ]:


array = range(1, 10, 2)
print(array, '|', type(array))


# In[ ]:


array = list(array)
print(array, '|', type(array))


# In[ ]:


print(array[1])


# In[ ]:


print(array[-2])


# С помощью данной конструкции можно перевернуть список, имейте ввиду, что исходный список не меняется, а получается его копия

# In[ ]:


array = list(range(1, 10, 2))
array_reverse = array[::-1]

print(array_reverse)


# In[ ]:


print(array == array_reverse)


# ---

# ### Задание
# * Создать список, заполненый целыми числами от N, M с шагом STEP при помощи функции `range`
# * Создать список квадратов целых чисел от n до m
# * Создать список квадратов нечетных целых чисел от n до m
# * Даны два целых числа A и B (A &lt; B). Найти все целые числа, расположенные между данными числами (включая сами эти числа), в порядке их возрастания, а также количество N этих чисел.
# * Ввести массив, состоящий из 14 элементов целого типа. Найти количество элементов четных по значению.
# * Ввести массив, состоящий из 12 элементов целого типа. Получить новый массив, заменив значение пятого элемента среднеарифметическим исходного массива.
# * Задан целочисленный массив, состоящий из 11 элементов. Найти количество элементов, абсолютное значение которых больше среднего арифметического.
# * Ввести целочисленный массив, состоящий из 10 элементов. Поменять местами максимальный и первый элементы.
# * Ввести массив, состоящий из 20 элементов целого типа. Определить каких элементов больше четных или нечетных по значению.
# * Задан массив, состоящий из 15 элементов вещественного типа. Определить количество элементов, значения которых больше первого элемента.
# * Дан массив, состоящий из 15 элементов целого типа. Получить новый массив, как разность между элементами исходного массива и его среднего арифметического.
# * Ввести массив, состоящий из 12 элементов действительного типа. Определить границы интервала, в котором находятся значения элементов массива.
# * Дан список целых чисел. Вернуть новый списов в котором все не отрицательные элементы возвведены в куб, в противном случае равны нулю

# In[ ]:


num1 = 12345
print(list(str(num1)))


# In[ ]:


find_num = 1
if find_num in [int(d) for d in list(str(num1))]:
    print('Success!')


# ### Задание
# * Получить список цифр числа N
# * Найти сумму всех цифр
# * Найти сумму всех четных чисел
# * Найти количество цифр
# * Найти минимальную (максимальную) цифру числа
# * Получить список всех цифр стоящих на нечетных (четных) местах. Например, 12345 -&gt; [1, 3, 5]
# * Найти разность первой и последней цифры
# * Найти минимальную цифру числа, и указать на каком месте она стоит

# ## Условные операторы

# Запись условных выражений. Не забываем про отступы для каждого блока
#
# ```python
# if Условие:
#     Блок инструкций 1
# else:
#     Блок инструкций 2
# ```

# * `&lt;` - Меньше — условие верно, если первый операнд меньше второго.
# * `&gt;` - Больше — условие верно, если первый операнд больше второго.
# * `&lt;=` - Меньше или равно.
# * `&gt;=` - Больше или равно.
# * `==` - Равенство. Условие верно, если два операнда равны.
# * `!=` - Неравенство. Условие верно, если два операнда неравны.

# Операторы сравнения можно объединять в цепочки, например,
#
# ```python
# a == b == c
#
# 1 &lt;= x &lt;= 10
# ```

# In[ ]:


# Записать условие принадлежности введеной координаты к координатной четверти

x = int(input())
y = int(input())
if x > 0:
    if y > 0:               # x > 0, y > 0
        print("Первая четверть")
    else:                   # x > 0, y < 0
        print("Четвертая четверть")
else:
    if y > 0:               # x < 0, y > 0
        print("Вторая четверть")
    else:                   # x < 0, y < 0
        print("Третья четверть")


# ### Логические операторы

# **Логическое И**. Оператор ` and` возвращает `True` тогда и только тогда, когда оба его операнда имеют значение `True`.
#
# **Логическое ИЛИ** Оператор `or` возвращает `True` тогда и только тогда, когда хотя бы один операнд равен `True`.
#
# **Логическое НЕ (отрицание)** . Логическое `not` возвращает `True`, если операнд равен `False` и наоборот.

# In[ ]:


# Записать условие принадлежности введеной координаты к координатной четверти через логические операторы и конструкцию if-elif-else


# ### if-else

# * Записать условие, которое является истинным, когда целое А кратно двум или трем
# * Записать условие, которое является истинным, когда каждое из чисел А и В нечетное.
# * Записать условие, которое является истинным, когда только одно из чисел А, В и С меньше 45.
# * Записать условие, которое является истинным, когда целое А не кратно трем и оканчивается нулем.
# * Записать логическое выражение, которые определяют, что число А не принадлежит интервалу от -10 до -1 или интервалу от 2 до 15.
# * Ввести с клавиатуры два числа. Определить, что больше, сумма квадратов или квадрат суммы этих чисел. Ответ вывести в виде сообщения.
# * Ввести с клавиатуры значения трех сторон треугольника a, b и c и определить, является ли он прямоугольным. Ответ вывести в виде сообщения.
# * Определить, является ли число a делителем для числа b и наоборот. Вывести сообщение
# * Даны значения трех сторон треугольника a, b, и c. Наименьшая из сторон треугольника является стороной квадрата. Определить, площадь какой из фигур больше
# * Дано двухзначное число. Определить: входит ли в него цифра 5.
# * Дано двухзначное число. Определить: входят ли в него цифры 3 и 7;
# * Дано двухзначное число. Определить входят ли в него цифры (4 и 8) или цифра 9.
# * Дано трехзначное число. Определить является ли сумма его цифр двухзначным числом.
# * Дано четырехзначное число. Определить равна ли сумма двух первых его цифр сумме двух последних;
# * Дано четырехзначное число. Определить кратна ли 7 сумма его цифр.

# ### if-elif-else

# * Написать логическое выражение для расчета суммы выплаты по депозиту на вклад : до 5000 грн начисляется 20% годовых, от 5000 грн до 10000 грн - 22% годовых.
# * Написать программу для определения времени суток по данному текущему времени и вывести сообщение (утро – с 6 до 12, день – с 12 до 18, вечер – с 18 до 24, ночь – с 0 до 6).
# * Ввести с клавиатуры номер месяца. Определить сезон в зависимости от номера месяца и вывести сообщение (весна (3,4,5), лето (6,7,8), осень (9,10,11) зима (12,1,2)).
# * Написать программу, которая в зависимости от характера ветра выдает сообщение о его скорости от 1до 4 м/с - слабый (1); от 5-10 м/c - умеренный (2); от 9-18 м/c - сильный (3); больше 19 м/c - ураганный (4).

# ## Дополнительные задания
# * Проверить все ли элементы в списке являются уникальными (Подсказка: используйте возможности set)
# * Дано трехзначное число. Определить: а) верно ли, что все его цифры одинаковые; б) есть ли среди его цифр одинаковые.
# * Дано натуральное четырехзначное число. Выяснить, является ли оно палиндромом (читается одинаково слева направо и справа налево).
# * Определить, является ли шестизначное число "счастливым" (сумма первых трех цифр равна сумме последних трех цифр).

# In[ ]:



