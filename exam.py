def int_input(prompt_string="Введите число "):
    """
    :return: Integer from keyboard input
    """
    n = input(prompt_string)

    while not n.lstrip("-").isnumeric():
        n = input("Это не число.\n" + prompt_string)

    return int(n)


if __name__ == '__main__':

    # 1.4 Записать логическое выражение, которое определяет, принадлежит ли число А интервалу от -137 до -51 или
    # интервалу от 123 до 55.
    a = int_input()
    if -137 <= a <= -51:
        ...
    elif 55 <= a <= 123:
        ...

    # 1.14 Записать логические выражения, которые имеют значение «истина» только при выполнении указанных условий
    # - неверно, что x>0 и x<5.
    x = int_input()
    logic_statement = not (0 < x < 5)

    # 1.24 Дано натуральное число. Определить, является ли оно четным, или оканчивается цифрой 3
    nat = abs(int_input())
    if nat % 2 == 0:
        print("Четное")
    elif str(nat)[-1] == '3':
        print("Заканчивается на 3")

    # 2.4 Дано трехзначное число. Определить: а) является ли сумма его цифр двузначным числом; б) является ли
    # произведение его цифр трехзначным числом.

    hundreds = int_input()
    list_ = [int(num) for num in str(hundreds)]
    sum_ = sum(list_)
    mul_ = 1
    for i in list_:
        mul_ *= i

    if len(str(sum_)) == 2:
        print("Сумма является двузначным числом")

    if len(str(mul_)) == 3:
        print("Произведение является трехзначным числом")

    # 3.4 Составить программу, которая в зависимости от порядкового номера дня месяца (1, 2, ..., 12) выводит на
    # экран его название (январь, февраль, ..., декабрь)

    month = int_input()
    if month == 1:
        print("январь")
    elif month == 2:
        print("февраль")
    elif month == 3:
        print("март")
    elif month == 4:
        print("апрель")
    elif month == 5:
        print("май")
    elif month == 6:
        print("июнь")
    elif month == 7:
        print("июль")
    elif month == 8:
        print("август")
    elif month == 9:
        print("сентябрь")
    elif month == 10:
        print("октябрь")
    elif month == 11:
        print("ноябрь")
    elif month == 12:
        print("декабрь")

    # 4.4 Задано натуральные числа от 10 до N. Вывести нечетные кратные пяти числа.

    N = int_input()

    num_list = [i for i in range(10, N+1)]

    for num in num_list:
        if num % 2 == 1 and num % 5 == 0:
            print(num)

    # 5.1 Гипотеза Сиракуз гласит. Требуется ее подтвердить или опровергнуть

    nat = abs(int_input())

    while True:
        if nat == 1:
            print("Теорема подтверди лося")
            break

        if nat % 2 == 0:    # если число четное, то разделить его пополам
            nat /= 2
        else:               # если нечетное - умножить на 3, прибавить 1 и результат разделить на 2
            nat *= 3
            nat += 1
            nat /= 2

    # 5.2 Начав тренировки, спортсмен в первый день пробежал n км. Каждый день он увеличивал дневную норму на y% нормы
    # предыдущего дня. Какой суммарный путь пробежит спортсмен за x дней?

    n = int_input("Сколько км")
    y = int_input("На сколько % увеличивается норма")
    y_percent = y / 100
    x = int_input("сколько дней")

    sum_total = 0

    for i in range(x):
        sum_total += n          # пробежал сегодня
        inc = n * y_percent
        n += inc                # пробежит завтра

    print(f"{n} километров суммарно пробежал")

    # 5.3 Определить, сколько в введенном пользователем числе четных цифр, а сколько нечетных

    n = abs(int_input())

    even = [i for i in str(n) if int(i) % 2 == 0]
    print(f"{len(even)} четных цифр")

    odd = len(n) - len(even)
    print(f"{odd} нечетных цифр")

    # 5.4 Написать программу в виде оператора цикла с параметром, обеспечивающий вывод на экран "столбиком" всех
    # целых чисел от 10 до 30. Оформить этот фрагмент в виде:

    # а) с предусловием
    i = 10
    while i <= 30:
        print(i)
        i += 1

    # б) с постусловием
    while True:
        print(i)
        i += 1
        if i >= 30:
            break

    # 6.1 В некоторой стране используются денежные купюры достоинством в 1, 2, 4,8, 16, 32 и 64. Дано натуральное
    # число n. Как наименьшим количеством таких денежных купюр можно выплатить сумму n (указать количество каждой из
    # используемых для выплаты купюр)? Предполагается, что имеется достаточно большое количество купюр всех достоинств.

    sum_ = abs(int_input("Введите общую сумму"))

    banknotes = {'64': 0, '32': 0, '16': 0, '8': 0, '4': 0, '2': 0, '1': 0}

    for key, value in banknotes:
        banknotes[key] = sum_ // int(key)
        sum_ = sum_ % int(key)

    print("Количество банкнот по номиналу:")
    print(banknotes)

    # 7.1 Напечатать таблицу умножения до n.

    n = abs(int_input("До какого числа печатаем?"))

    for i in range(n+1):
        for j in range(n + 1):
            print(f"{i} x {j} = {i*j}", end=" ")
        print()

    # 7.2 У гусей и кроликов вместе 64 лапы. Сколько могло быть кроликов и гусей (указать все сочетания, которые
    # возможны)?

    legs = 64

    for ph in range(1, legs//2):
        for rab in range(1, legs//4):
            if ph + rab > legs//2:
                break
            else:
                if ph * 2 + rab * 4 != legs:
                    continue
                print("Кроликов:", rab)
                print("Фазанов:", ph)
                print("--------------")
